# Code
```cpp []
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {

        ListNode* addHead = new ListNode(0);
        ListNode* current = addHead; 

        int carry = 0; 
        int sum = 0;   

        ListNode* current1 = l1;
        ListNode* current2 = l2;

        while (current1 != nullptr || current2 != nullptr) {
            int val1 = (current1 != nullptr) ? current1->val : 0; 
            int val2 = (current2 != nullptr) ? current2->val : 0; 

            sum = val1 + val2 + carry; 

            carry = sum / 10;
            current->next = new ListNode(sum % 10);
            current = current->next; 

            if (current1 != nullptr) current1 = current1->next;
            if (current2 != nullptr) current2 = current2->next;
        }

        if (carry > 0) {
            current->next = new ListNode(carry);
        }

        return addHead->next;
    }
};
```
